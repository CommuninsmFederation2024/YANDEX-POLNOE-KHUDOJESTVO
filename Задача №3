import sys
import os
from PyQt6 import uic
from PyQt6.QtGui import QPixmap
from PyQt6.QtWidgets import QApplication, QLabel, QMainWindow
from PyQt6.QtCore import Qt
import requests


class MainWindow(QMainWindow):
    def __init__(self):  # Исправлено на __init__
        super().__init__()  # Исправлено на __init__()
        uic.loadUi('untitled.ui', self)
        self.g_map = self.findChild(QLabel, 'g_map')  # Инициализация g_map
        self.spn = 0.00001
        self.zoom = 5
        self.ll = [37.977751, 55.757718]
        self.typemap = 'map'
        self.key = ''
        self.show_map()
        self.setFocus()
        self.delta = 0.1 * (2 ** (15 - self.zoom))

    def show_map(self):
        map_params = {
            'll': ','.join(map(str, self.ll)),
            'l': self.typemap,
            'z': self.zoom
        }
        response = requests.get('http://static-maps.yandex.ru/1.x/', params=map_params)
        if response.status_code == 200:
            with open('tmp.png', mode='wb') as tmp:
                tmp.write(response.content)
            pixmap = QPixmap()
            pixmap.load('tmp.png')
            self.g_map.setPixmap(pixmap)
            os.remove('tmp.png')

    def keyPressEvent(self, event):
        key = event.key()
        if key == Qt.Key.Key_PageUp and self.zoom < 17:
            self.zoom += 1
            self.show_map()
        elif key == Qt.Key.Key_PageDown and self.zoom > 0:
            self.zoom -= 1
            self.show_map()

        if key == Qt.Key.Key_Up:
            self.ll[1] = min(self.ll[1] + self.delta, 90.0)
            self.show_map()
        elif key == Qt.Key.Key_Down:
            self.ll[1] = max(self.ll[1] - self.delta, -90.0)
            self.show_map()
        elif key == Qt.Key.Key_Left:
            self.ll[0] = max(self.ll[0] - self.delta, -180.0)
            self.show_map()
        elif key == Qt.Key.Key_Right:
            self.ll[0] = min(self.ll[0] + self.delta, 180.0)
            self.show_map()


app = QApplication(sys.argv)
main_window = MainWindow()
main_window.show()
sys.exit(app.exec())
